package Midi.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_A;
  private ConceptPresentation props_A0;
  private ConceptPresentation props_A1;
  private ConceptPresentation props_A2;
  private ConceptPresentation props_A3;
  private ConceptPresentation props_A4;
  private ConceptPresentation props_A5;
  private ConceptPresentation props_A6;
  private ConceptPresentation props_A7;
  private ConceptPresentation props_A8;
  private ConceptPresentation props_ANeg1;
  private ConceptPresentation props_ASharp;
  private ConceptPresentation props_ASharp0;
  private ConceptPresentation props_ASharp1;
  private ConceptPresentation props_ASharp2;
  private ConceptPresentation props_ASharp3;
  private ConceptPresentation props_ASharp4;
  private ConceptPresentation props_ASharp5;
  private ConceptPresentation props_ASharp6;
  private ConceptPresentation props_ASharp7;
  private ConceptPresentation props_ASharp8;
  private ConceptPresentation props_ASharpNeg1;
  private ConceptPresentation props_B;
  private ConceptPresentation props_B0;
  private ConceptPresentation props_B1;
  private ConceptPresentation props_B2;
  private ConceptPresentation props_B3;
  private ConceptPresentation props_B4;
  private ConceptPresentation props_B5;
  private ConceptPresentation props_B6;
  private ConceptPresentation props_B7;
  private ConceptPresentation props_B8;
  private ConceptPresentation props_BNeg1;
  private ConceptPresentation props_ByteSized;
  private ConceptPresentation props_C;
  private ConceptPresentation props_C0;
  private ConceptPresentation props_C1;
  private ConceptPresentation props_C2;
  private ConceptPresentation props_C3;
  private ConceptPresentation props_C4;
  private ConceptPresentation props_C5;
  private ConceptPresentation props_C6;
  private ConceptPresentation props_C7;
  private ConceptPresentation props_C8;
  private ConceptPresentation props_C9;
  private ConceptPresentation props_CNeg1;
  private ConceptPresentation props_CSharp;
  private ConceptPresentation props_CSharp0;
  private ConceptPresentation props_CSharp1;
  private ConceptPresentation props_CSharp2;
  private ConceptPresentation props_CSharp3;
  private ConceptPresentation props_CSharp4;
  private ConceptPresentation props_CSharp5;
  private ConceptPresentation props_CSharp6;
  private ConceptPresentation props_CSharp7;
  private ConceptPresentation props_CSharp8;
  private ConceptPresentation props_CSharp9;
  private ConceptPresentation props_CSharpNeg1;
  private ConceptPresentation props_ChannelMode;
  private ConceptPresentation props_ChannelPressure;
  private ConceptPresentation props_Chunk;
  private ConceptPresentation props_ControlChange;
  private ConceptPresentation props_Controller;
  private ConceptPresentation props_ControllerValuable;
  private ConceptPresentation props_ControllerValue;
  private ConceptPresentation props_Controllerable;
  private ConceptPresentation props_CopyrightNotice;
  private ConceptPresentation props_CuePoint;
  private ConceptPresentation props_D;
  private ConceptPresentation props_D0;
  private ConceptPresentation props_D1;
  private ConceptPresentation props_D2;
  private ConceptPresentation props_D3;
  private ConceptPresentation props_D4;
  private ConceptPresentation props_D5;
  private ConceptPresentation props_D6;
  private ConceptPresentation props_D7;
  private ConceptPresentation props_D8;
  private ConceptPresentation props_D9;
  private ConceptPresentation props_DNeg1;
  private ConceptPresentation props_DSharp;
  private ConceptPresentation props_DSharp0;
  private ConceptPresentation props_DSharp1;
  private ConceptPresentation props_DSharp2;
  private ConceptPresentation props_DSharp3;
  private ConceptPresentation props_DSharp4;
  private ConceptPresentation props_DSharp5;
  private ConceptPresentation props_DSharp6;
  private ConceptPresentation props_DSharp7;
  private ConceptPresentation props_DSharp8;
  private ConceptPresentation props_DSharp9;
  private ConceptPresentation props_DSharpNeg1;
  private ConceptPresentation props_E;
  private ConceptPresentation props_E0;
  private ConceptPresentation props_E1;
  private ConceptPresentation props_E2;
  private ConceptPresentation props_E3;
  private ConceptPresentation props_E4;
  private ConceptPresentation props_E5;
  private ConceptPresentation props_E6;
  private ConceptPresentation props_E7;
  private ConceptPresentation props_E8;
  private ConceptPresentation props_E9;
  private ConceptPresentation props_ENeg1;
  private ConceptPresentation props_EmptyTrackEvent;
  private ConceptPresentation props_EndOfTrack;
  private ConceptPresentation props_F;
  private ConceptPresentation props_F0;
  private ConceptPresentation props_F1;
  private ConceptPresentation props_F2;
  private ConceptPresentation props_F3;
  private ConceptPresentation props_F4;
  private ConceptPresentation props_F5;
  private ConceptPresentation props_F6;
  private ConceptPresentation props_F7;
  private ConceptPresentation props_F8;
  private ConceptPresentation props_F9;
  private ConceptPresentation props_FNeg1;
  private ConceptPresentation props_FSharp;
  private ConceptPresentation props_FSharp0;
  private ConceptPresentation props_FSharp1;
  private ConceptPresentation props_FSharp2;
  private ConceptPresentation props_FSharp3;
  private ConceptPresentation props_FSharp4;
  private ConceptPresentation props_FSharp5;
  private ConceptPresentation props_FSharp6;
  private ConceptPresentation props_FSharp7;
  private ConceptPresentation props_FSharp8;
  private ConceptPresentation props_FSharp9;
  private ConceptPresentation props_FSharpNeg1;
  private ConceptPresentation props_File;
  private ConceptPresentation props_G;
  private ConceptPresentation props_G0;
  private ConceptPresentation props_G1;
  private ConceptPresentation props_G2;
  private ConceptPresentation props_G3;
  private ConceptPresentation props_G4;
  private ConceptPresentation props_G5;
  private ConceptPresentation props_G6;
  private ConceptPresentation props_G7;
  private ConceptPresentation props_G8;
  private ConceptPresentation props_G9;
  private ConceptPresentation props_GNeg1;
  private ConceptPresentation props_GSharp;
  private ConceptPresentation props_GSharp0;
  private ConceptPresentation props_GSharp1;
  private ConceptPresentation props_GSharp2;
  private ConceptPresentation props_GSharp3;
  private ConceptPresentation props_GSharp4;
  private ConceptPresentation props_GSharp5;
  private ConceptPresentation props_GSharp6;
  private ConceptPresentation props_GSharp7;
  private ConceptPresentation props_GSharp8;
  private ConceptPresentation props_GSharpNeg1;
  private ConceptPresentation props_Header;
  private ConceptPresentation props_InstrumentName;
  private ConceptPresentation props_KeyCode;
  private ConceptPresentation props_KeySignature;
  private ConceptPresentation props_Keyable;
  private ConceptPresentation props_LyricText;
  private ConceptPresentation props_MarkerText;
  private ConceptPresentation props_MetaEvent;
  private ConceptPresentation props_MidiChannelPrefixAssignment;
  private ConceptPresentation props_MidiEvent;
  private ConceptPresentation props_Note;
  private ConceptPresentation props_NoteOff;
  private ConceptPresentation props_NoteOn;
  private ConceptPresentation props_PitchWheelChange;
  private ConceptPresentation props_PolyphonicKeyPressure;
  private ConceptPresentation props_Pressurable;
  private ConceptPresentation props_ProgramChange;
  private ConceptPresentation props_SequenceNumber;
  private ConceptPresentation props_SequenceOrTrackName;
  private ConceptPresentation props_SequencerSpecificEvent;
  private ConceptPresentation props_SetTempo;
  private ConceptPresentation props_SmpteOffset;
  private ConceptPresentation props_SysexEvent;
  private ConceptPresentation props_TextEvent;
  private ConceptPresentation props_TicksPerQuarterNote;
  private ConceptPresentation props_TimeSignature;
  private ConceptPresentation props_Timecode;
  private ConceptPresentation props_Track;
  private ConceptPresentation props_TrackDivision;
  private ConceptPresentation props_TrackEvent;
  private ConceptPresentation props_VelocityValue;
  private ConceptPresentation props_Velocityable;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.A:
        if (props_A == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_A = cpb.create();
        }
        return props_A;
      case LanguageConceptSwitch.A0:
        if (props_A0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a @ 0");
          props_A0 = cpb.create();
        }
        return props_A0;
      case LanguageConceptSwitch.A1:
        if (props_A1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a @ 1");
          props_A1 = cpb.create();
        }
        return props_A1;
      case LanguageConceptSwitch.A2:
        if (props_A2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a @ 2");
          props_A2 = cpb.create();
        }
        return props_A2;
      case LanguageConceptSwitch.A3:
        if (props_A3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a @ 3");
          props_A3 = cpb.create();
        }
        return props_A3;
      case LanguageConceptSwitch.A4:
        if (props_A4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a @ 4");
          props_A4 = cpb.create();
        }
        return props_A4;
      case LanguageConceptSwitch.A5:
        if (props_A5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a @ 5");
          props_A5 = cpb.create();
        }
        return props_A5;
      case LanguageConceptSwitch.A6:
        if (props_A6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a @ 6");
          props_A6 = cpb.create();
        }
        return props_A6;
      case LanguageConceptSwitch.A7:
        if (props_A7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a @ 7");
          props_A7 = cpb.create();
        }
        return props_A7;
      case LanguageConceptSwitch.A8:
        if (props_A8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a @ 8");
          props_A8 = cpb.create();
        }
        return props_A8;
      case LanguageConceptSwitch.ANeg1:
        if (props_ANeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a @ -1");
          props_ANeg1 = cpb.create();
        }
        return props_ANeg1;
      case LanguageConceptSwitch.ASharp:
        if (props_ASharp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ASharp = cpb.create();
        }
        return props_ASharp;
      case LanguageConceptSwitch.ASharp0:
        if (props_ASharp0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a# @ 0");
          props_ASharp0 = cpb.create();
        }
        return props_ASharp0;
      case LanguageConceptSwitch.ASharp1:
        if (props_ASharp1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a# @ 1");
          props_ASharp1 = cpb.create();
        }
        return props_ASharp1;
      case LanguageConceptSwitch.ASharp2:
        if (props_ASharp2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a# @ 2");
          props_ASharp2 = cpb.create();
        }
        return props_ASharp2;
      case LanguageConceptSwitch.ASharp3:
        if (props_ASharp3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a# @ 3");
          props_ASharp3 = cpb.create();
        }
        return props_ASharp3;
      case LanguageConceptSwitch.ASharp4:
        if (props_ASharp4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a# @ 4");
          props_ASharp4 = cpb.create();
        }
        return props_ASharp4;
      case LanguageConceptSwitch.ASharp5:
        if (props_ASharp5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a# @ 5");
          props_ASharp5 = cpb.create();
        }
        return props_ASharp5;
      case LanguageConceptSwitch.ASharp6:
        if (props_ASharp6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a# @ 6");
          props_ASharp6 = cpb.create();
        }
        return props_ASharp6;
      case LanguageConceptSwitch.ASharp7:
        if (props_ASharp7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a# @ 7");
          props_ASharp7 = cpb.create();
        }
        return props_ASharp7;
      case LanguageConceptSwitch.ASharp8:
        if (props_ASharp8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a# @ 8");
          props_ASharp8 = cpb.create();
        }
        return props_ASharp8;
      case LanguageConceptSwitch.ASharpNeg1:
        if (props_ASharpNeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("a# @ -1");
          props_ASharpNeg1 = cpb.create();
        }
        return props_ASharpNeg1;
      case LanguageConceptSwitch.B:
        if (props_B == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_B = cpb.create();
        }
        return props_B;
      case LanguageConceptSwitch.B0:
        if (props_B0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("b @ 0");
          props_B0 = cpb.create();
        }
        return props_B0;
      case LanguageConceptSwitch.B1:
        if (props_B1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("b @ 1");
          props_B1 = cpb.create();
        }
        return props_B1;
      case LanguageConceptSwitch.B2:
        if (props_B2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("b @ 2");
          props_B2 = cpb.create();
        }
        return props_B2;
      case LanguageConceptSwitch.B3:
        if (props_B3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("b @ 3");
          props_B3 = cpb.create();
        }
        return props_B3;
      case LanguageConceptSwitch.B4:
        if (props_B4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("b @ 4");
          props_B4 = cpb.create();
        }
        return props_B4;
      case LanguageConceptSwitch.B5:
        if (props_B5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("b @ 5");
          props_B5 = cpb.create();
        }
        return props_B5;
      case LanguageConceptSwitch.B6:
        if (props_B6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("b @ 6");
          props_B6 = cpb.create();
        }
        return props_B6;
      case LanguageConceptSwitch.B7:
        if (props_B7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("b @ 7");
          props_B7 = cpb.create();
        }
        return props_B7;
      case LanguageConceptSwitch.B8:
        if (props_B8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("b @ 8");
          props_B8 = cpb.create();
        }
        return props_B8;
      case LanguageConceptSwitch.BNeg1:
        if (props_BNeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("b @ -1");
          props_BNeg1 = cpb.create();
        }
        return props_BNeg1;
      case LanguageConceptSwitch.ByteSized:
        if (props_ByteSized == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ByteSized = cpb.create();
        }
        return props_ByteSized;
      case LanguageConceptSwitch.C:
        if (props_C == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_C = cpb.create();
        }
        return props_C;
      case LanguageConceptSwitch.C0:
        if (props_C0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c @ 0");
          props_C0 = cpb.create();
        }
        return props_C0;
      case LanguageConceptSwitch.C1:
        if (props_C1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c @ 1");
          props_C1 = cpb.create();
        }
        return props_C1;
      case LanguageConceptSwitch.C2:
        if (props_C2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c @ 2");
          props_C2 = cpb.create();
        }
        return props_C2;
      case LanguageConceptSwitch.C3:
        if (props_C3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c @ 3");
          props_C3 = cpb.create();
        }
        return props_C3;
      case LanguageConceptSwitch.C4:
        if (props_C4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c @ 4");
          props_C4 = cpb.create();
        }
        return props_C4;
      case LanguageConceptSwitch.C5:
        if (props_C5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c @ 5");
          props_C5 = cpb.create();
        }
        return props_C5;
      case LanguageConceptSwitch.C6:
        if (props_C6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c @ 6");
          props_C6 = cpb.create();
        }
        return props_C6;
      case LanguageConceptSwitch.C7:
        if (props_C7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c @ 7");
          props_C7 = cpb.create();
        }
        return props_C7;
      case LanguageConceptSwitch.C8:
        if (props_C8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c @ 8");
          props_C8 = cpb.create();
        }
        return props_C8;
      case LanguageConceptSwitch.C9:
        if (props_C9 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c @ 9");
          props_C9 = cpb.create();
        }
        return props_C9;
      case LanguageConceptSwitch.CNeg1:
        if (props_CNeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c @ -1");
          props_CNeg1 = cpb.create();
        }
        return props_CNeg1;
      case LanguageConceptSwitch.CSharp:
        if (props_CSharp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_CSharp = cpb.create();
        }
        return props_CSharp;
      case LanguageConceptSwitch.CSharp0:
        if (props_CSharp0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c# @ 0");
          props_CSharp0 = cpb.create();
        }
        return props_CSharp0;
      case LanguageConceptSwitch.CSharp1:
        if (props_CSharp1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c# @ 1");
          props_CSharp1 = cpb.create();
        }
        return props_CSharp1;
      case LanguageConceptSwitch.CSharp2:
        if (props_CSharp2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c# @ 2");
          props_CSharp2 = cpb.create();
        }
        return props_CSharp2;
      case LanguageConceptSwitch.CSharp3:
        if (props_CSharp3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c# @ 3");
          props_CSharp3 = cpb.create();
        }
        return props_CSharp3;
      case LanguageConceptSwitch.CSharp4:
        if (props_CSharp4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c# @ 4");
          props_CSharp4 = cpb.create();
        }
        return props_CSharp4;
      case LanguageConceptSwitch.CSharp5:
        if (props_CSharp5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c# @ 5");
          props_CSharp5 = cpb.create();
        }
        return props_CSharp5;
      case LanguageConceptSwitch.CSharp6:
        if (props_CSharp6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c# @ 6");
          props_CSharp6 = cpb.create();
        }
        return props_CSharp6;
      case LanguageConceptSwitch.CSharp7:
        if (props_CSharp7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c# @ 7");
          props_CSharp7 = cpb.create();
        }
        return props_CSharp7;
      case LanguageConceptSwitch.CSharp8:
        if (props_CSharp8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c# @ 8");
          props_CSharp8 = cpb.create();
        }
        return props_CSharp8;
      case LanguageConceptSwitch.CSharp9:
        if (props_CSharp9 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c# @ 9");
          props_CSharp9 = cpb.create();
        }
        return props_CSharp9;
      case LanguageConceptSwitch.CSharpNeg1:
        if (props_CSharpNeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("c# @ -1");
          props_CSharpNeg1 = cpb.create();
        }
        return props_CSharpNeg1;
      case LanguageConceptSwitch.ChannelMode:
        if (props_ChannelMode == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("This the same code as the Control Change, but implements Mode control by using reserved controller numbers");
          cpb.rawPresentation("channel_mode");
          props_ChannelMode = cpb.create();
        }
        return props_ChannelMode;
      case LanguageConceptSwitch.ChannelPressure:
        if (props_ChannelPressure == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("This message is most often sent by pressing down on the key after it \"bottoms out\". This message is different from polyphonic after-touch. Use this message to send the single greatest pressure value (of all the current depressed keys).\n");
          cpb.rawPresentation("channel_pressure");
          props_ChannelPressure = cpb.create();
        }
        return props_ChannelPressure;
      case LanguageConceptSwitch.Chunk:
        if (props_Chunk == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Chunk = cpb.create();
        }
        return props_Chunk;
      case LanguageConceptSwitch.ControlChange:
        if (props_ControlChange == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Sent when a controller value changes. Controllers include devices such as pedals and levers.");
          cpb.rawPresentation("control_change");
          props_ControlChange = cpb.create();
        }
        return props_ControlChange;
      case LanguageConceptSwitch.Controller:
        if (props_Controller == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Controller");
          props_Controller = cpb.create();
        }
        return props_Controller;
      case LanguageConceptSwitch.ControllerValuable:
        if (props_ControllerValuable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ControllerValuable = cpb.create();
        }
        return props_ControllerValuable;
      case LanguageConceptSwitch.ControllerValue:
        if (props_ControllerValue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ControllerValue");
          props_ControllerValue = cpb.create();
        }
        return props_ControllerValue;
      case LanguageConceptSwitch.Controllerable:
        if (props_Controllerable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Controllerable = cpb.create();
        }
        return props_Controllerable;
      case LanguageConceptSwitch.CopyrightNotice:
        if (props_CopyrightNotice == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("copyright_notice");
          props_CopyrightNotice = cpb.create();
        }
        return props_CopyrightNotice;
      case LanguageConceptSwitch.CuePoint:
        if (props_CuePoint == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("cue_point");
          props_CuePoint = cpb.create();
        }
        return props_CuePoint;
      case LanguageConceptSwitch.D:
        if (props_D == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_D = cpb.create();
        }
        return props_D;
      case LanguageConceptSwitch.D0:
        if (props_D0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d @ 0");
          props_D0 = cpb.create();
        }
        return props_D0;
      case LanguageConceptSwitch.D1:
        if (props_D1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d @ 1");
          props_D1 = cpb.create();
        }
        return props_D1;
      case LanguageConceptSwitch.D2:
        if (props_D2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d @ 2");
          props_D2 = cpb.create();
        }
        return props_D2;
      case LanguageConceptSwitch.D3:
        if (props_D3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d @ 3");
          props_D3 = cpb.create();
        }
        return props_D3;
      case LanguageConceptSwitch.D4:
        if (props_D4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d @ 4");
          props_D4 = cpb.create();
        }
        return props_D4;
      case LanguageConceptSwitch.D5:
        if (props_D5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d @ 5");
          props_D5 = cpb.create();
        }
        return props_D5;
      case LanguageConceptSwitch.D6:
        if (props_D6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d @ 6");
          props_D6 = cpb.create();
        }
        return props_D6;
      case LanguageConceptSwitch.D7:
        if (props_D7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d @ 7");
          props_D7 = cpb.create();
        }
        return props_D7;
      case LanguageConceptSwitch.D8:
        if (props_D8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d @ 8");
          props_D8 = cpb.create();
        }
        return props_D8;
      case LanguageConceptSwitch.D9:
        if (props_D9 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d @ 9");
          props_D9 = cpb.create();
        }
        return props_D9;
      case LanguageConceptSwitch.DNeg1:
        if (props_DNeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d @ -1");
          props_DNeg1 = cpb.create();
        }
        return props_DNeg1;
      case LanguageConceptSwitch.DSharp:
        if (props_DSharp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_DSharp = cpb.create();
        }
        return props_DSharp;
      case LanguageConceptSwitch.DSharp0:
        if (props_DSharp0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d# @ 0");
          props_DSharp0 = cpb.create();
        }
        return props_DSharp0;
      case LanguageConceptSwitch.DSharp1:
        if (props_DSharp1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d# @ 1");
          props_DSharp1 = cpb.create();
        }
        return props_DSharp1;
      case LanguageConceptSwitch.DSharp2:
        if (props_DSharp2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d# @ 2");
          props_DSharp2 = cpb.create();
        }
        return props_DSharp2;
      case LanguageConceptSwitch.DSharp3:
        if (props_DSharp3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d# @ 3");
          props_DSharp3 = cpb.create();
        }
        return props_DSharp3;
      case LanguageConceptSwitch.DSharp4:
        if (props_DSharp4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d# @ 4");
          props_DSharp4 = cpb.create();
        }
        return props_DSharp4;
      case LanguageConceptSwitch.DSharp5:
        if (props_DSharp5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d# @ 5");
          props_DSharp5 = cpb.create();
        }
        return props_DSharp5;
      case LanguageConceptSwitch.DSharp6:
        if (props_DSharp6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d# @ 6");
          props_DSharp6 = cpb.create();
        }
        return props_DSharp6;
      case LanguageConceptSwitch.DSharp7:
        if (props_DSharp7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d# @ 7");
          props_DSharp7 = cpb.create();
        }
        return props_DSharp7;
      case LanguageConceptSwitch.DSharp8:
        if (props_DSharp8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d# @ 8");
          props_DSharp8 = cpb.create();
        }
        return props_DSharp8;
      case LanguageConceptSwitch.DSharp9:
        if (props_DSharp9 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d# @ 9");
          props_DSharp9 = cpb.create();
        }
        return props_DSharp9;
      case LanguageConceptSwitch.DSharpNeg1:
        if (props_DSharpNeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("d# @ -1");
          props_DSharpNeg1 = cpb.create();
        }
        return props_DSharpNeg1;
      case LanguageConceptSwitch.E:
        if (props_E == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_E = cpb.create();
        }
        return props_E;
      case LanguageConceptSwitch.E0:
        if (props_E0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("e @ 0");
          props_E0 = cpb.create();
        }
        return props_E0;
      case LanguageConceptSwitch.E1:
        if (props_E1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("e @ 1");
          props_E1 = cpb.create();
        }
        return props_E1;
      case LanguageConceptSwitch.E2:
        if (props_E2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("e @ 2");
          props_E2 = cpb.create();
        }
        return props_E2;
      case LanguageConceptSwitch.E3:
        if (props_E3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("e @ 3");
          props_E3 = cpb.create();
        }
        return props_E3;
      case LanguageConceptSwitch.E4:
        if (props_E4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("e @ 4");
          props_E4 = cpb.create();
        }
        return props_E4;
      case LanguageConceptSwitch.E5:
        if (props_E5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("e @ 5");
          props_E5 = cpb.create();
        }
        return props_E5;
      case LanguageConceptSwitch.E6:
        if (props_E6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("e @ 6");
          props_E6 = cpb.create();
        }
        return props_E6;
      case LanguageConceptSwitch.E7:
        if (props_E7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("e @ 7");
          props_E7 = cpb.create();
        }
        return props_E7;
      case LanguageConceptSwitch.E8:
        if (props_E8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("e @ 8");
          props_E8 = cpb.create();
        }
        return props_E8;
      case LanguageConceptSwitch.E9:
        if (props_E9 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("e @ 9");
          props_E9 = cpb.create();
        }
        return props_E9;
      case LanguageConceptSwitch.ENeg1:
        if (props_ENeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("e @ -1");
          props_ENeg1 = cpb.create();
        }
        return props_ENeg1;
      case LanguageConceptSwitch.EmptyTrackEvent:
        if (props_EmptyTrackEvent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("EmptyTrackEvent");
          props_EmptyTrackEvent = cpb.create();
        }
        return props_EmptyTrackEvent;
      case LanguageConceptSwitch.EndOfTrack:
        if (props_EndOfTrack == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("end_of_track");
          props_EndOfTrack = cpb.create();
        }
        return props_EndOfTrack;
      case LanguageConceptSwitch.F:
        if (props_F == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_F = cpb.create();
        }
        return props_F;
      case LanguageConceptSwitch.F0:
        if (props_F0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f @ 0");
          props_F0 = cpb.create();
        }
        return props_F0;
      case LanguageConceptSwitch.F1:
        if (props_F1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f @ 1");
          props_F1 = cpb.create();
        }
        return props_F1;
      case LanguageConceptSwitch.F2:
        if (props_F2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f @ 2");
          props_F2 = cpb.create();
        }
        return props_F2;
      case LanguageConceptSwitch.F3:
        if (props_F3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f @ 3");
          props_F3 = cpb.create();
        }
        return props_F3;
      case LanguageConceptSwitch.F4:
        if (props_F4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f @ 4");
          props_F4 = cpb.create();
        }
        return props_F4;
      case LanguageConceptSwitch.F5:
        if (props_F5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f @ 5");
          props_F5 = cpb.create();
        }
        return props_F5;
      case LanguageConceptSwitch.F6:
        if (props_F6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f @ 6");
          props_F6 = cpb.create();
        }
        return props_F6;
      case LanguageConceptSwitch.F7:
        if (props_F7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f @ 7");
          props_F7 = cpb.create();
        }
        return props_F7;
      case LanguageConceptSwitch.F8:
        if (props_F8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f @ 8");
          props_F8 = cpb.create();
        }
        return props_F8;
      case LanguageConceptSwitch.F9:
        if (props_F9 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f @ 9");
          props_F9 = cpb.create();
        }
        return props_F9;
      case LanguageConceptSwitch.FNeg1:
        if (props_FNeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f @ -1");
          props_FNeg1 = cpb.create();
        }
        return props_FNeg1;
      case LanguageConceptSwitch.FSharp:
        if (props_FSharp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_FSharp = cpb.create();
        }
        return props_FSharp;
      case LanguageConceptSwitch.FSharp0:
        if (props_FSharp0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f# @ 0");
          props_FSharp0 = cpb.create();
        }
        return props_FSharp0;
      case LanguageConceptSwitch.FSharp1:
        if (props_FSharp1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f# @ 1");
          props_FSharp1 = cpb.create();
        }
        return props_FSharp1;
      case LanguageConceptSwitch.FSharp2:
        if (props_FSharp2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f# @ 2");
          props_FSharp2 = cpb.create();
        }
        return props_FSharp2;
      case LanguageConceptSwitch.FSharp3:
        if (props_FSharp3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f# @ 3");
          props_FSharp3 = cpb.create();
        }
        return props_FSharp3;
      case LanguageConceptSwitch.FSharp4:
        if (props_FSharp4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f# @ 4");
          props_FSharp4 = cpb.create();
        }
        return props_FSharp4;
      case LanguageConceptSwitch.FSharp5:
        if (props_FSharp5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f# @ 5");
          props_FSharp5 = cpb.create();
        }
        return props_FSharp5;
      case LanguageConceptSwitch.FSharp6:
        if (props_FSharp6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f# @ 6");
          props_FSharp6 = cpb.create();
        }
        return props_FSharp6;
      case LanguageConceptSwitch.FSharp7:
        if (props_FSharp7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f# @ 7");
          props_FSharp7 = cpb.create();
        }
        return props_FSharp7;
      case LanguageConceptSwitch.FSharp8:
        if (props_FSharp8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f# @ 8");
          props_FSharp8 = cpb.create();
        }
        return props_FSharp8;
      case LanguageConceptSwitch.FSharp9:
        if (props_FSharp9 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f# @ 9");
          props_FSharp9 = cpb.create();
        }
        return props_FSharp9;
      case LanguageConceptSwitch.FSharpNeg1:
        if (props_FSharpNeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f# @ -1");
          props_FSharpNeg1 = cpb.create();
        }
        return props_FSharpNeg1;
      case LanguageConceptSwitch.File:
        if (props_File == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_File = cpb.create();
        }
        return props_File;
      case LanguageConceptSwitch.G:
        if (props_G == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_G = cpb.create();
        }
        return props_G;
      case LanguageConceptSwitch.G0:
        if (props_G0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g @ 0");
          props_G0 = cpb.create();
        }
        return props_G0;
      case LanguageConceptSwitch.G1:
        if (props_G1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g @ 1");
          props_G1 = cpb.create();
        }
        return props_G1;
      case LanguageConceptSwitch.G2:
        if (props_G2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g @ 2");
          props_G2 = cpb.create();
        }
        return props_G2;
      case LanguageConceptSwitch.G3:
        if (props_G3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g @ 3");
          props_G3 = cpb.create();
        }
        return props_G3;
      case LanguageConceptSwitch.G4:
        if (props_G4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g @ 4");
          props_G4 = cpb.create();
        }
        return props_G4;
      case LanguageConceptSwitch.G5:
        if (props_G5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g @ 5");
          props_G5 = cpb.create();
        }
        return props_G5;
      case LanguageConceptSwitch.G6:
        if (props_G6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g @ 6");
          props_G6 = cpb.create();
        }
        return props_G6;
      case LanguageConceptSwitch.G7:
        if (props_G7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g @ 7");
          props_G7 = cpb.create();
        }
        return props_G7;
      case LanguageConceptSwitch.G8:
        if (props_G8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g @ 8");
          props_G8 = cpb.create();
        }
        return props_G8;
      case LanguageConceptSwitch.G9:
        if (props_G9 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g @ 9");
          props_G9 = cpb.create();
        }
        return props_G9;
      case LanguageConceptSwitch.GNeg1:
        if (props_GNeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g @ -1");
          props_GNeg1 = cpb.create();
        }
        return props_GNeg1;
      case LanguageConceptSwitch.GSharp:
        if (props_GSharp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_GSharp = cpb.create();
        }
        return props_GSharp;
      case LanguageConceptSwitch.GSharp0:
        if (props_GSharp0 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g# @ 0");
          props_GSharp0 = cpb.create();
        }
        return props_GSharp0;
      case LanguageConceptSwitch.GSharp1:
        if (props_GSharp1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g# @ 1");
          props_GSharp1 = cpb.create();
        }
        return props_GSharp1;
      case LanguageConceptSwitch.GSharp2:
        if (props_GSharp2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g# @ 2");
          props_GSharp2 = cpb.create();
        }
        return props_GSharp2;
      case LanguageConceptSwitch.GSharp3:
        if (props_GSharp3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g# @ 3");
          props_GSharp3 = cpb.create();
        }
        return props_GSharp3;
      case LanguageConceptSwitch.GSharp4:
        if (props_GSharp4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g# @ 4");
          props_GSharp4 = cpb.create();
        }
        return props_GSharp4;
      case LanguageConceptSwitch.GSharp5:
        if (props_GSharp5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g# @ 5");
          props_GSharp5 = cpb.create();
        }
        return props_GSharp5;
      case LanguageConceptSwitch.GSharp6:
        if (props_GSharp6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g# @ 6");
          props_GSharp6 = cpb.create();
        }
        return props_GSharp6;
      case LanguageConceptSwitch.GSharp7:
        if (props_GSharp7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g# @ 7");
          props_GSharp7 = cpb.create();
        }
        return props_GSharp7;
      case LanguageConceptSwitch.GSharp8:
        if (props_GSharp8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g# @ 8");
          props_GSharp8 = cpb.create();
        }
        return props_GSharp8;
      case LanguageConceptSwitch.GSharpNeg1:
        if (props_GSharpNeg1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("g# @ -1");
          props_GSharpNeg1 = cpb.create();
        }
        return props_GSharpNeg1;
      case LanguageConceptSwitch.Header:
        if (props_Header == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("header");
          props_Header = cpb.create();
        }
        return props_Header;
      case LanguageConceptSwitch.InstrumentName:
        if (props_InstrumentName == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("instrument_name");
          props_InstrumentName = cpb.create();
        }
        return props_InstrumentName;
      case LanguageConceptSwitch.KeyCode:
        if (props_KeyCode == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("KeyCode");
          props_KeyCode = cpb.create();
        }
        return props_KeyCode;
      case LanguageConceptSwitch.KeySignature:
        if (props_KeySignature == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("key_signature");
          props_KeySignature = cpb.create();
        }
        return props_KeySignature;
      case LanguageConceptSwitch.Keyable:
        if (props_Keyable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Keyable = cpb.create();
        }
        return props_Keyable;
      case LanguageConceptSwitch.LyricText:
        if (props_LyricText == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("lyric_text");
          props_LyricText = cpb.create();
        }
        return props_LyricText;
      case LanguageConceptSwitch.MarkerText:
        if (props_MarkerText == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("marker_text");
          props_MarkerText = cpb.create();
        }
        return props_MarkerText;
      case LanguageConceptSwitch.MetaEvent:
        if (props_MetaEvent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_MetaEvent = cpb.create();
        }
        return props_MetaEvent;
      case LanguageConceptSwitch.MidiChannelPrefixAssignment:
        if (props_MidiChannelPrefixAssignment == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("midi_channel_prefix_assignment");
          props_MidiChannelPrefixAssignment = cpb.create();
        }
        return props_MidiChannelPrefixAssignment;
      case LanguageConceptSwitch.MidiEvent:
        if (props_MidiEvent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_MidiEvent = cpb.create();
        }
        return props_MidiEvent;
      case LanguageConceptSwitch.Note:
        if (props_Note == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Note = cpb.create();
        }
        return props_Note;
      case LanguageConceptSwitch.NoteOff:
        if (props_NoteOff == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Message sent when a note is released (ended).");
          cpb.rawPresentation("note_off");
          props_NoteOff = cpb.create();
        }
        return props_NoteOff;
      case LanguageConceptSwitch.NoteOn:
        if (props_NoteOn == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Sent when a note is depressed (start).");
          cpb.rawPresentation("note_on");
          props_NoteOn = cpb.create();
        }
        return props_NoteOn;
      case LanguageConceptSwitch.PitchWheelChange:
        if (props_PitchWheelChange == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Sent to indicate a change in the pitch wheel");
          cpb.rawPresentation("pitch_wheel_change");
          props_PitchWheelChange = cpb.create();
        }
        return props_PitchWheelChange;
      case LanguageConceptSwitch.PolyphonicKeyPressure:
        if (props_PolyphonicKeyPressure == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("(Aftertouch) Most often sent by pressing down on the key after it \"bottoms out\".");
          cpb.rawPresentation("poly_pressure");
          props_PolyphonicKeyPressure = cpb.create();
        }
        return props_PolyphonicKeyPressure;
      case LanguageConceptSwitch.Pressurable:
        if (props_Pressurable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Pressurable = cpb.create();
        }
        return props_Pressurable;
      case LanguageConceptSwitch.ProgramChange:
        if (props_ProgramChange == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Sent when the patch number changes.");
          cpb.rawPresentation("program_change");
          props_ProgramChange = cpb.create();
        }
        return props_ProgramChange;
      case LanguageConceptSwitch.SequenceNumber:
        if (props_SequenceNumber == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("sequence_number");
          props_SequenceNumber = cpb.create();
        }
        return props_SequenceNumber;
      case LanguageConceptSwitch.SequenceOrTrackName:
        if (props_SequenceOrTrackName == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("sequence_or_track_name");
          props_SequenceOrTrackName = cpb.create();
        }
        return props_SequenceOrTrackName;
      case LanguageConceptSwitch.SequencerSpecificEvent:
        if (props_SequencerSpecificEvent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("sequencer_specific_event");
          props_SequencerSpecificEvent = cpb.create();
        }
        return props_SequencerSpecificEvent;
      case LanguageConceptSwitch.SetTempo:
        if (props_SetTempo == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("set_tempo");
          props_SetTempo = cpb.create();
        }
        return props_SetTempo;
      case LanguageConceptSwitch.SmpteOffset:
        if (props_SmpteOffset == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("smpte_offset");
          props_SmpteOffset = cpb.create();
        }
        return props_SmpteOffset;
      case LanguageConceptSwitch.SysexEvent:
        if (props_SysexEvent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_SysexEvent = cpb.create();
        }
        return props_SysexEvent;
      case LanguageConceptSwitch.TextEvent:
        if (props_TextEvent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("text");
          props_TextEvent = cpb.create();
        }
        return props_TextEvent;
      case LanguageConceptSwitch.TicksPerQuarterNote:
        if (props_TicksPerQuarterNote == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ticks_per_quarter_note");
          props_TicksPerQuarterNote = cpb.create();
        }
        return props_TicksPerQuarterNote;
      case LanguageConceptSwitch.TimeSignature:
        if (props_TimeSignature == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("time_signature");
          props_TimeSignature = cpb.create();
        }
        return props_TimeSignature;
      case LanguageConceptSwitch.Timecode:
        if (props_Timecode == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("timecode");
          props_Timecode = cpb.create();
        }
        return props_Timecode;
      case LanguageConceptSwitch.Track:
        if (props_Track == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("track");
          props_Track = cpb.create();
        }
        return props_Track;
      case LanguageConceptSwitch.TrackDivision:
        if (props_TrackDivision == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_TrackDivision = cpb.create();
        }
        return props_TrackDivision;
      case LanguageConceptSwitch.TrackEvent:
        if (props_TrackEvent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_TrackEvent = cpb.create();
        }
        return props_TrackEvent;
      case LanguageConceptSwitch.VelocityValue:
        if (props_VelocityValue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("VelocityValue");
          props_VelocityValue = cpb.create();
        }
        return props_VelocityValue;
      case LanguageConceptSwitch.Velocityable:
        if (props_Velocityable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Velocityable = cpb.create();
        }
        return props_Velocityable;
    }
    return null;
  }
}
